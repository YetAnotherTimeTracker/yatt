# pip3
brew update
brew install python3
curl https://bootstrap.pypa.io/get-pip.py | python3


# telegram api
pip3 install python-telegram-bot


# postgres
# https://www.codementor.io/devops/tutorial/getting-started-postgresql-server-mac-osx
# http://flask.pocoo.org/docs/0.10/patterns/sqlalchemy/
brew update
brew install postgresql
pg_ctl -D /usr/local/var/postgres start
\du \dt \connect \list \quit
pip3 install sqlalchemy


# docker
# нужно установить docker и docker-compose
# установка простая, посе установки нужно проверить запуском hello-world контейнера
# на Mac docker устанавливается в один клик: https://docs.docker.com/docker-for-mac/install/#download-docker-for-mac
# дополнительно нужно будет установить docker-compose (через homebrew например) если он не идет в комплекте
# (проверить: docker-compose --version)


# ENV_VAR
# для запуска в режиме разработки нужно установить переменную окружения BOT_ENV=dev
# в прод режиме: BOT_ENV=prod


# Деплой:
# сборка image: выполнить /scripts/deploy/push-image.sh
# залогиниться в докере: docker login --username=xxx --password=yyy
# запушить image: docker push yattbot/bots:<version>
# на виртуалке создать папку и в ней docker-compose.yml: mkdir test && cd test && touch docker-compose.yml
# скопировать имеющийся docker-compose, заменив в боте строку build на следующую: image: yattbot/bots:<version>
# остановить текущие контейнеры: docker ps. затем docker stop <containerid>
# запустить контейнер: docker-compose up. если скажет что уже еть такой то: docker rm <containerid>
# запустить снова, убедившись что бд поднялась, а бот к ней подключился: docker-compose up -d
